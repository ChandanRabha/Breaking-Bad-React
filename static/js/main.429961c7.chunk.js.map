{"version":3,"sources":["firebase.js","components/contexts/AuthContext.js","components/Pagination.js","components/Pagination2.js","components/character/Character.js","components/character-grid/Character-grid.js","components/episode/Episode.js","components/episode-grid/Episode-grid.js","components/grid/Grid.js","assets/reload.svg","components/homepage/homepage.js","components/signup/Signup.js","components/login/Login.js","components/forgotpassword/Forgotpassword.js","components/PrivateRoute.js","App.js","index.js"],"names":["app_firebase","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","forgotPassword","sendPasswordResetEmail","Provider","Pagination","elementsPerPage","totalElements","paginate","pageNumbers","i","Math","ceil","push","className","map","number","onClick","Pagination2","Character","character","src","img","alt","name","portrayed","nickname","birthday","status","CharacterGrid","dataset","char_id","Episode","episode","title","season","air_date","characters","index","EpisodeGrid","episode_id","Grid","episodes","filter","currentPage","setCurrentPage","currentPage2","setCurrentPage2","indexOfLastCharacter","indexOfFirstCharacter","currentCharacters","slice","indexOfLastEpisode","indexOfFirstEpisode","currentEpisodes","length","pageNumber","Homepage","filterEpisode","funcEpisode","filterCharacter","funCharacter","funFilter","history","useHistory","localStorage","setItem","handleLogout","a","removeItem","alert","message","fetch","then","response","json","data","load","reload","onChange","e","target","style","color","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","handleSubmit","preventDefault","current","console","log","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","placeholder","ref","required","Button","disabled","to","Login","window","location","pathname","Forgotpassword","setMessage","PrivateRoute","Component","component","rest","render","props","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.429961c7.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firebase-auth'\r\n// require('dotenv').config()\r\n\r\n//firebase api constraints\r\nconst app_firebase=firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN ,\r\n    databaseURL:process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID ,\r\n    storageBucket:process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId:process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n//this gives us authentication instance\r\nexport const auth = app_firebase.auth()\r\n\r\n\r\nexport default app_firebase;\r\n","import React,{useContext,useState,useEffect} from 'react'\r\nimport {auth} from '../../firebase'\r\n\r\nconst AuthContext= React.createContext()\r\n\r\n//this function will allow use if the context\r\nexport function useAuth()\r\n{\r\n    return useContext(AuthContext)\r\n}\r\n\r\n//The AuthProvider encloses the App component and all the children inside it is destructured and passed as a component\r\nexport const AuthProvider= ({children}) => {\r\n\r\n\r\n    //creating a current user state to check and currentUser\r\n    //currentUser stores the details of the current logged in user\r\n    const [currentUser,setCurrentUser]=useState()\r\n    const [loading,setLoading]=useState(true)\r\n\r\n\r\n    //this function takes the email and password for registration which gets passed to the firebase api\r\n    const signup=(email,password)=>{\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    const login=(email,password)=>{\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    const logout=()=>{\r\n       return auth.signOut()\r\n    }\r\n\r\n    const forgotPassword=(email)=>{\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n\r\n    // a hook is introduced so that to check on change in the state of the authentication api of firebase \r\n    useEffect(()=>{\r\n        \r\n        //onAuthStateChanged returns a promise of the currently logged in user\r\n       const unsubscribe = auth.onAuthStateChanged(user=>{  \r\n        setCurrentUser(user)\r\n        setLoading(false)\r\n        })\r\n        //unsubscribes from the onAuthStateChanged listener\r\n        return unsubscribe\r\n    },[])\r\n\r\n    \r\n    //the value object contains the currentUser state variable along with the signup function to be passed as a parameter to child components\r\n    const value={\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        forgotPassword\r\n    }\r\n    return (\r\n        //here the Auth Provider returns the children  along with the the context-> AuthContext with  a prop value declared above.\r\n        <AuthContext.Provider value={value}>\r\n          {!loading && children}  \r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","\r\nexport const Pagination = ({ elementsPerPage, totalElements, paginate }) => {\r\n  const pageNumbers = [];\r\n \r\n  for (let i = 1; i <= Math.ceil(totalElements / elementsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <button onClick={() => paginate(number)}  className='page-link'>\r\n              {number}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n\r\n","\r\nexport const Pagination2 = ({ elementsPerPage, totalElements, paginate }) => {\r\n  const pageNumbers = [];\r\n \r\n  for (let i = 1; i <= Math.ceil(totalElements / elementsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <button onClick={() => paginate(number)} className='page-link'>\r\n              {number}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n\r\n","import './Character.styles.css'\r\n\r\nexport const Character = ({character}) => {\r\n  // console.log(character)\r\n    return (\r\n         <div className='card'>\r\n      <div className='card-inner'>\r\n        <div className='card-front'>\r\n          <img src={character.img} alt='' />\r\n          <h5 className='card-text'>{character.name}</h5>\r\n        </div>\r\n        <div className='card-back'>\r\n          <h1>{character.name}</h1>\r\n          <ul>\r\n            <li>\r\n              <strong>Actor Name:</strong> {character.portrayed}\r\n            </li>\r\n            <li>\r\n              <strong>Nickname:</strong> {character.nickname}\r\n            </li>\r\n            <li>\r\n              <strong>Birthday:</strong> {character.birthday}\r\n            </li>\r\n            <li>\r\n              <strong>Status:</strong> {character.status}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n","import './character-grid.styles.css'\r\nimport {Character} from '../character/Character'\r\n\r\n\r\nexport const CharacterGrid= ({dataset}) => {\r\n\r\n        return <div className='cards'>{(dataset.map(\r\n            character=>(<Character key={character.char_id} character={character} />)\r\n                   ))}</div>\r\n    \r\n\r\n}\r\n","import './episode.styles.css'\r\nexport const Episode = ({episode}) => {\r\n    return (\r\n        <div className='per-episode' > \r\n              <div className='episode-info'>\r\n                  <div><b>Episode</b>:   {episode.episode}</div> \r\n                  <div><b>Title</b>:     <i>{episode.title}</i></div> \r\n                  <div><b>Season</b>:   {episode.season}</div> \r\n                  <div><b>Air Date</b>:  {episode.air_date}</div> \r\n              </div>\r\n               <div className='parent-characters'>\r\n                   <h5 className='character_title'>Characters</h5>\r\n                  <div className='per-episode-characters'>       \r\n                    {\r\n                                episode.characters.map((character,index)=><h5 key={index}>{character}</h5>)\r\n                    }\r\n                    </div>\r\n               </div>\r\n        </div>\r\n    )\r\n}\r\n","import './episode-grid.styles.css'\r\nimport {Episode} from '../episode/Episode'\r\n\r\n\r\nexport const EpisodeGrid= ({dataset}) => \r\n    {\r\n      return (<div className='episodes-grid' >\r\n              {\r\n               (dataset.map((episode)=>\r\n                            (<Episode key={`${episode.episode_id}`} episode={episode} />)))}</div>)\r\n    }\r\n\r\n   \r\n\r\n","\r\nimport {useState} from 'react'\r\n\r\n//importing required components\r\nimport {Pagination} from '../Pagination'\r\nimport {Pagination2} from '../Pagination2'\r\nimport {CharacterGrid} from '../character-grid/Character-grid'\r\nimport {EpisodeGrid} from '../episode-grid/Episode-grid'\r\n\r\nimport './grid.css'\r\n\r\nexport const Grid = ({characters ,episodes,filter}) => {\r\n\r\n  //state variable for page number for character wise;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n    //state variable for page number for episode wise;\r\n  const [currentPage2, setCurrentPage2] = useState(1);\r\n  //total number of elements per page\r\n  const [elementsPerPage] = useState(8);\r\n\r\n\r\n\r\n/* ---Constrains for Pagination Character wise.---\r\n   Here the indexes of the characters are calculated based on how many characters need to be shown per page.\r\n\r\n   Eg: 6 characters should be shown per page and we are in page no 1 \r\n         indexOfLastCharacter=>  currentPage * elementsPerPage => 1 * 6 = 6\r\n         indexOfFirstCharacter=> indexOfLastCharacter - elementsPerPage => 6 - 6 = 0\r\n         Since the index starts from 0. The number of characters that will render is from 0 to 6 which is 7 characters.\r\n\r\n  */\r\n  const indexOfLastCharacter = currentPage * elementsPerPage;\r\n  const indexOfFirstCharacter= indexOfLastCharacter - elementsPerPage;\r\n\r\n  //here we slice the data of the Characters state variable which was passed to the Grid component as a prop \r\n  //the slice is based on the index of the first character value and the index of the last character value calculated above.\r\n  const currentCharacters = characters.slice(indexOfFirstCharacter, indexOfLastCharacter);\r\n\r\n\r\n\r\n\r\n// Constrains for Pagination Episodic wise\r\n  const indexOfLastEpisode = currentPage2 * 4;\r\n  const indexOfFirstEpisode= indexOfLastEpisode - 4;\r\n  const currentEpisodes= episodes.slice(indexOfFirstEpisode, indexOfLastEpisode);\r\n\r\n\r\n\r\n//  Change page\r\n//  paginate and paginate2 are functions which sets the page numbers of character wise data and episode wise data. \r\n\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n   const paginate2 = pageNumber => setCurrentPage2(pageNumber);\r\n\r\n    //the state variable filter is checked\r\n    // the value 1 means Character wise component should be rendered\r\n    // else the Episode wise component should be rendered\r\n    if(filter==='1')\r\n              return ( \r\n                <div className='parent-container'>\r\n                   <Pagination \r\n                          elementsPerPage={elementsPerPage}\r\n                          totalElements={characters.length}\r\n                          paginate={paginate}/>\r\n                 <CharacterGrid dataset={currentCharacters} filter={filter}/>\r\n                 \r\n                 </div>\r\n                      )\r\n    else {    \r\n        return (\r\n              <div className='parent-container'>\r\n                 <Pagination2 \r\n                          elementsPerPage={elementsPerPage}\r\n                          totalElements={episodes.length}\r\n                          paginate={paginate2}\r\n                          />\r\n                <EpisodeGrid  dataset={currentEpisodes} filter={filter}/>\r\n               \r\n               </div>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/reload.27f12b3c.svg\";","/*importing Hooks as need state variables for passing data \r\nAnd life cycle methods for fetching data from the API as soon as component renders */\r\nimport {useState,useEffect} from 'react';\r\n\r\nimport {useAuth} from '../contexts/AuthContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n//Grid component will have the contents of both character wise and episode wise respectively\r\nimport {Grid} from  '../grid/Grid' \r\n\r\n//importing css file for styles\r\nimport './homepage.css';\r\nimport reload from '../../assets/reload.svg'\r\n\r\nexport const Homepage=()=> {\r\n \r\n  //State Variable Declarations\r\n  /*\r\n  filterEpisode stores all the Episode returned from the API\r\n  filterCharacter stores all the Character data returned from the API\r\n  filter will store a 0 or 1 value where we use it to basically check if the user opted for viewing Character wise or Episode wise.\r\n  */\r\n  const [filterEpisode,funcEpisode]=useState([])  \r\n  const [filterCharacter,funCharacter]=useState([])\r\n  const [loading,setLoading]=useState(true)\r\n  const  [filter,funFilter]=useState('1')\r\n\r\n\r\n\r\n  const {currentUser,logout}=useAuth()\r\n  const history=useHistory()\r\n\r\n  //setting email in localstorage\r\n   localStorage.setItem('email',currentUser.email)\r\n\r\n\r\n  \r\n   const handleLogout= async()=>{\r\n     \r\n        try{\r\n            await logout()\r\n             localStorage.removeItem('email')\r\n            history.push('/login')\r\n        }\r\n         catch(e){\r\n             alert(e.message)\r\n         }\r\n    }\r\n  \r\n  //Hook Declartation\r\n  //The hook below is called only for the first time the component is rendered\r\n  useEffect(()=>\r\n   { \r\n     const load= async ()=>{ \r\n    //characters and episode data from the API are being fetched and stored to their respective state variables\r\n    await fetch(`https://www.breakingbadapi.com/api/episodes/`).then(response=>response.json()).then(data=>funcEpisode(data))\r\n    await fetch(`https://www.breakingbadapi.com/api/characters/`).then(response=>response.json()).then(data=>{funCharacter(data)\r\n    setLoading(false)\r\n     })}\r\n\r\n    load()\r\n\r\n  },[]   \r\n  )\r\n \r\n\r\n  return ( !loading ?\r\n    <div className=\"container\">\r\n      <div className='filterBoxes'>\r\n        <h1 className='headerText'>Breaking Bad API</h1>\r\n\r\n        <div className='controls'>   \r\n            {/* Using a select tag to switch between Characters View and Episodes View */}\r\n            {/* An onchange method is given where the current selected value is passed to the filter state variable. */}\r\n            {/* The filter state variable is created and utilised so as to make the dom update on the changes when we switch from characters view to episodes view and vice versa */}\r\n            <select onChange={(e)=>funFilter(e.target.value)} value={filter}><option value='1'>Characters</option><option value='2'>Episodes</option></select>\r\n            <div className='secondary-controls'>\r\n             <h5 style={{color:'white'}}><i className=\"fas fa-user\"></i> {currentUser.email}</h5>\r\n            <button className='btnLogout' onClick={handleLogout}>Logout <i className=\"fas fa-sign-out-alt\"></i></button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      {/* In the Grid component we pass the characters and episodes state variables which was retrieved from the Breaking Bad API. */}\r\n         {/* The filter state variable value is also passed so that the DOM gets the trigger that the component needs to be re-rendered*/}\r\n      <Grid  characters={filterCharacter}   episodes={filterEpisode}   filter={filter}  />\r\n\r\n    </div> : <div className='loader'>Loading <img src={reload} alt='loader'></img></div>\r\n  );\r\n}\r\n","import React,{useRef,useState} from 'react'\r\nimport {Card,Button,Form,Alert} from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport {Link,useHistory} from 'react-router-dom'\r\n\r\nimport './signup.css'\r\n// import \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nexport const Signup = () => {\r\n  \r\n    const emailRef=useRef()\r\n    const passwordRef=useRef()\r\n    const passwordConfirmRef=useRef()\r\n    const [error,setError]=useState('')\r\n    const [loading,setLoading]=useState(false)\r\n    const history=useHistory()\r\n\r\n    //useAuth is a function which returns the context variable AuthContext and also returns the prop -> value which was passed to it in the AuthContext.Provider component \r\n    //destructuring the prop-> value and getting only signup function\r\n    const {signup}= useAuth();\r\n\r\n\r\n     const handleSubmit= async(e)=>{\r\n        e.preventDefault()\r\n\r\n        if(passwordRef.current.value!==passwordConfirmRef.current.value)\r\n        {return setError('Passwords Do not Match')}\r\n\r\n\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            //the function takes the username and password entered by the user which are stored in the two declares userRef variables.\r\n            await signup(emailRef.current.value,passwordRef.current.value)\r\n            console.log(history)\r\n             history.push('/')\r\n            }\r\n        catch (e){\r\n            setError(e.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n          \r\n             <h1 className='headerText'>Breaking Bad API</h1>\r\n                <div className='card-signup'>\r\n               <Card.Body>\r\n                   <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                   {error && <Alert variant='danger'>{error}</Alert>}\r\n                   <Form onSubmit={handleSubmit} >\r\n                       <Form.Group id=\"email\">\r\n                           <Form.Label>Email <i className=\"fas fa-envelope\"></i></Form.Label>\r\n                           <Form.Control type='email' placeholder='Enter Email' ref={emailRef} required/>\r\n                       </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                           <Form.Label>Password <i className=\"fas fa-key\"></i></Form.Label>\r\n                           <Form.Control type='password' placeholder='Enter Password' ref={passwordRef} required/>\r\n                       </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                           <Form.Label>Confirm Password</Form.Label>\r\n                           <Form.Control type='password' placeholder='Confirm Password' ref={passwordConfirmRef} required/>\r\n                       </Form.Group>\r\n                       <Button disabled={loading} type='submit' className=\"w-100\">Sign Up <i className=\"fas fa-user-plus\"></i></Button>\r\n                   </Form>\r\n                   \r\n                     <div className=\"w-100 text-center mt-2\">\r\n                        Already Have An Account?<Link to='/login'> Log In</Link> \r\n                     </div>\r\n               </Card.Body>\r\n            </div> \r\n            \r\n         \r\n          \r\n        </>\r\n    )\r\n}\r\n","import React,{useRef,useState} from 'react'\r\nimport {Card,Button,Form,Alert} from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport {Link,useHistory} from 'react-router-dom'\r\n\r\nimport './login.css'\r\n\r\n// import \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nexport const Login = () => {\r\n    console.log(window.location.pathname)\r\n    const emailRef=useRef()\r\n    const passwordRef=useRef()\r\n    const [error,setError]=useState('')\r\n    const [loading,setLoading]=useState(false)\r\n    const history=useHistory()\r\n\r\n    //useAuth is a function which returns the context variable AuthContext and also returns the prop -> value which was passed to it in the AuthContext.Provider component \r\n    //destructuring the prop-> value and getting only signup function\r\n    //first time currentUser state variable is empty\r\n    const {login}= useAuth();\r\n\r\n\r\n     const handleSubmit= async(e)=>{\r\n        e.preventDefault()\r\n\r\n\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            //the function takes the username and password entered by the user which are stored in the two declares userRef variables.\r\n            await login(emailRef.current.value,passwordRef.current.value)\r\n\r\n             history.push('/')\r\n            }\r\n        catch (e){\r\n            setError(e.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n               <h1 className='headerText'>Breaking Bad API</h1>\r\n               <div className='card'>\r\n               <Card.Body>\r\n                   <h2 className=\"text-center mb-4\">Log In <i className=\"fas fa-user\"></i></h2>\r\n                   {error && <Alert variant='danger'>{error}</Alert>}\r\n                   <Form onSubmit={handleSubmit} >\r\n                       <Form.Group id=\"email\">\r\n                           <Form.Label>Email <i className=\"fas fa-envelope\"></i></Form.Label>\r\n                           <Form.Control type='email' placeholder='Enter Email' ref={emailRef} required/>\r\n                       </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                           <Form.Label>Password <i className=\"fas fa-key\"></i></Form.Label>\r\n                           <Form.Control type='password' placeholder='Enter Password' ref={passwordRef} required/>\r\n                       </Form.Group>\r\n                       <Button disabled={loading} type='submit' className=\"w-100\">Log In <i className=\"fas fa-sign-in-alt\"></i></Button>\r\n                   </Form>\r\n                    <div className=\"w-100 text-center mt-3 \" style={{color:'white'}}>\r\n                        <Link to='/forgotpassword'>Forgot Password ?</Link>\r\n                       </div> \r\n                   <div className=\"w-100 text-center mt-2\">\r\n              Need An Account? <Link to='/signup'>Sign Up <i className=\"fas fa-user-plus\"></i></Link>\r\n                  </div> \r\n                    </Card.Body>            \r\n               </div>\r\n           \r\n            \r\n        </>\r\n    )\r\n}\r\n","import React,{useRef,useState} from 'react'\r\nimport {Card,Button,Form,Alert} from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const Forgotpassword = () => {\r\n    const emailRef=useRef('')\r\n    const [error,setError]=useState('')\r\n    const [message,setMessage]=useState('')\r\n    const [loading,setLoading]=useState(false)\r\n    const {forgotPassword}=useAuth();\r\n    \r\n   \r\n    const handleSubmit= async(e)=>{\r\n        e.preventDefault()\r\n        try{\r\n            setError('')\r\n            setMessage('')\r\n            setLoading(true)\r\n          await forgotPassword(emailRef.current.value)\r\n            //the function takes the username and password entered by the user which are stored in the two declares userRef variables.\r\n            setMessage(\"A Recovery Email has been Sent\")\r\n            }\r\n        catch (e){\r\n            setError(e.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <>\r\n                 <h1 className='headerText'>Breaking Bad API</h1>\r\n               <div className='card'>\r\n               <Card.Body>\r\n                   <h2 className=\"text-center mb-4\">Forgot Password</h2>\r\n                   {error && <Alert variant='danger'>{error}</Alert>}\r\n                   {message && <Alert variant='warning'>{message}</Alert>}\r\n                   <Form onSubmit={handleSubmit} >\r\n                       <Form.Group id=\"email\">\r\n                           <Form.Label>Email <i className=\"fas fa-envelope\"></i></Form.Label>\r\n                           <Form.Control type='email' placeholder='Enter Recovery Email' ref={emailRef} required/>\r\n                       </Form.Group>\r\n                       <Button disabled={loading} type='submit' className=\"w-100\">Reset Password <i className=\"fas fa-unlock\"></i> </Button>\r\n\r\n                   </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n            <Link to='/login'>Sign In</Link>\r\n           </div> \r\n               </Card.Body>\r\n           </div>\r\n           \r\n            \r\n           \r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"./contexts/AuthContext\"\r\n\r\n//private route is to check if user is already logged in to redirect them back to login\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}\r\n","// import './App.css';\r\n import {Homepage} from './components/homepage/homepage'\r\nimport {Signup} from './components/signup/Signup'\r\nimport {Login} from './components/login/Login'\r\nimport {Forgotpassword} from './components/forgotpassword/Forgotpassword'\r\nimport PrivateRoute from './components/PrivateRoute'\r\n// import { Container } from 'react-bootstrap'\r\nimport {AuthProvider} from './components/contexts/AuthContext'\r\nimport {BrowserRouter as Router,Switch,Route,HashRouter} from 'react-router-dom'\r\n\r\nfunction App() {\r\n  return (\r\n    //here the AuthProvider encloses the entire components inside which  can be accessed/passed from the childrens attribute. Checking the AuthContext file gives better understanding\r\n           <Router> \r\n              <AuthProvider>\r\n              <HashRouter>   \r\n             <Switch>\r\n                 <PrivateRoute  exact path='/' component={Homepage}/>            \r\n                 {/* <Container className='d-flex align-items-center justify-content-center' style={{minHeight:'100vh'}}> */}\r\n                      <Route path={\"/signup\"} component={Signup}/>\r\n                      <Route path={\"/login\"} component={Login}/>\r\n                      <Route path=\"/forgotPassword\" component={Forgotpassword}/>   \r\n                 {/* </Container> */}\r\n                  \r\n             </Switch>\r\n             </HashRouter>\r\n              </AuthProvider>\r\n           \r\n           </Router>\r\n        \r\n         \r\n     \r\n \r\n \r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport '@fortawesome/fontawesome-free/js/all.js';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}