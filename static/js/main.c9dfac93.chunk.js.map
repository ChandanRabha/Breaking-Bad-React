{"version":3,"sources":["firebase.js","components/contexts/AuthContext.js","components/Pagination.js","components/Pagination2.js","components/character/Character.js","components/character-grid/Character-grid.js","components/episode/Episode.js","components/episode-grid/Episode-grid.js","components/grid/Grid.js","components/homepage/homepage.js","components/signup/Signup.js","components/login/Login.js","components/forgotpassword/Forgotpassword.js","components/PrivateRoute.js","App.js","index.js"],"names":["app_firebase","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","forgotPassword","sendPasswordResetEmail","Provider","Pagination","elementsPerPage","totalElements","paginate","pageNumbers","i","Math","ceil","push","className","map","number","onClick","Pagination2","Character","character","src","img","alt","name","portrayed","nickname","birthday","status","CharacterGrid","dataset","char_id","Episode","episode","title","season","air_date","class","characters","index","EpisodeGrid","episode_id","Grid","episodes","filter","currentPage","setCurrentPage","currentPage2","setCurrentPage2","indexOfLastCharacter","indexOfFirstCharacter","currentCharacters","slice","indexOfLastEpisode","indexOfFirstEpisode","currentEpisodes","length","pageNumber","Homepage","filterEpisode","funcEpisode","filterCharacter","funCharacter","funFilter","setError","history","useHistory","localStorage","setItem","handleLogout","a","removeItem","message","fetch","then","response","json","data","onChange","e","target","style","color","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","handleSubmit","preventDefault","current","console","log","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","placeholder","ref","required","Button","disabled","to","Login","window","location","pathname","Forgotpassword","setMessage","PrivateRoute","Component","component","rest","render","props","App","relative_path","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9dfac93.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firebase-auth'\r\n// require('dotenv').config()\r\n\r\n//firebase api constraints\r\nconst app_firebase=firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN ,\r\n    databaseURL:process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID ,\r\n    storageBucket:process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId:process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n//this gives us authentication instance\r\nexport const auth = app_firebase.auth()\r\n\r\n\r\nexport default app_firebase;\r\n","import React,{useContext,useState,useEffect} from 'react'\r\nimport {auth} from '../../firebase'\r\n\r\nconst AuthContext= React.createContext()\r\n\r\n//this function will allow use if the context\r\nexport function useAuth()\r\n{\r\n    return useContext(AuthContext)\r\n}\r\n\r\n//The AuthProvider encloses the App component and all the children inside it is destructured and passed as a component\r\nexport const AuthProvider= ({children}) => {\r\n\r\n\r\n    //creating a current user state to check and currentUser\r\n    //currentUser stores the details of the current logged in user\r\n    const [currentUser,setCurrentUser]=useState()\r\n    const [loading,setLoading]=useState(true)\r\n\r\n\r\n    //this function takes the email and password for registration which gets passed to the firebase api\r\n    const signup=(email,password)=>{\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    const login=(email,password)=>{\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    const logout=()=>{\r\n       return auth.signOut()\r\n    }\r\n\r\n    const forgotPassword=(email)=>{\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n\r\n    // a hook is introduced so that to check on change in the state of the authentication api of firebase \r\n    useEffect(()=>{\r\n        \r\n        //onAuthStateChanged returns a promise of the currently logged in user\r\n       const unsubscribe = auth.onAuthStateChanged(user=>{  \r\n        setCurrentUser(user)\r\n        setLoading(false)\r\n        })\r\n        //unsubscribes from the onAuthStateChanged listener\r\n        return unsubscribe\r\n    },[])\r\n\r\n    \r\n    //the value object contains the currentUser state variable along with the signup function to be passed as a parameter to child components\r\n    const value={\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        forgotPassword\r\n    }\r\n    return (\r\n        //here the Auth Provider returns the children  along with the the context-> AuthContext with  a prop value declared above.\r\n        <AuthContext.Provider value={value}>\r\n          {!loading && children}  \r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","\r\nexport const Pagination = ({ elementsPerPage, totalElements, paginate }) => {\r\n  const pageNumbers = [];\r\n \r\n  for (let i = 1; i <= Math.ceil(totalElements / elementsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <button onClick={() => paginate(number)}  className='page-link'>\r\n              {number}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n\r\n","\r\nexport const Pagination2 = ({ elementsPerPage, totalElements, paginate }) => {\r\n  const pageNumbers = [];\r\n \r\n  for (let i = 1; i <= Math.ceil(totalElements / elementsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <button onClick={() => paginate(number)} className='page-link'>\r\n              {number}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n\r\n","import './Character.styles.css'\r\n\r\nexport const Character = ({character}) => {\r\n  // console.log(character)\r\n    return (\r\n         <div className='card'>\r\n      <div className='card-inner'>\r\n        <div className='card-front'>\r\n          <img src={character.img} alt='' />\r\n          <h5 className='card-text'>{character.name}</h5>\r\n        </div>\r\n        <div className='card-back'>\r\n          <h1>{character.name}</h1>\r\n          <ul>\r\n            <li>\r\n              <strong>Actor Name:</strong> {character.portrayed}\r\n            </li>\r\n            <li>\r\n              <strong>Nickname:</strong> {character.nickname}\r\n            </li>\r\n            <li>\r\n              <strong>Birthday:</strong> {character.birthday}\r\n            </li>\r\n            <li>\r\n              <strong>Status:</strong> {character.status}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n","import './character-grid.styles.css'\r\nimport {Character} from '../character/Character'\r\n\r\n\r\nexport const CharacterGrid= ({dataset}) => {\r\n\r\n        return <div className='cards'>{(dataset.map(\r\n            character=>(<Character key={character.char_id} character={character} />)\r\n                   ))}</div>\r\n    \r\n\r\n}\r\n","import './episode.styles.css'\r\nexport const Episode = ({episode}) => {\r\n    return (\r\n        <div className='per-episode' > \r\n              <div className='episode-info'>\r\n                  <div><b>Episode</b>:   {episode.episode}</div> \r\n                  <div><b>Title</b>:     <i>{episode.title}</i></div> \r\n                  <div><b>Season</b>:   {episode.season}</div> \r\n                  <div><b>Air Date</b>:  {episode.air_date}</div> \r\n              </div>\r\n               <div class='parent-characters'>\r\n                   <h5 class='character_title'>Characters</h5>\r\n                  <div className='per-episode-characters'>       \r\n                    {\r\n                                episode.characters.map((character,index)=><h5 key={index}>{character}</h5>)\r\n                    }\r\n                    </div>\r\n               </div>\r\n        </div>\r\n    )\r\n}\r\n","import './episode-grid.styles.css'\r\nimport {Episode} from '../episode/Episode'\r\n\r\n\r\nexport const EpisodeGrid= ({dataset}) => \r\n    {\r\n      return (<div className='episodes-grid' >\r\n              {\r\n               (dataset.map((episode)=>\r\n                            (<Episode key={`${episode.episode_id}`} episode={episode} />)))}</div>)\r\n    }\r\n\r\n   \r\n\r\n","\r\nimport {useState} from 'react'\r\n\r\n//importing required components\r\nimport {Pagination} from '../Pagination'\r\nimport {Pagination2} from '../Pagination2'\r\nimport {CharacterGrid} from '../character-grid/Character-grid'\r\nimport {EpisodeGrid} from '../episode-grid/Episode-grid'\r\n\r\n\r\nexport const Grid = ({characters ,episodes,filter}) => {\r\n\r\n  //state variable for page number for character wise;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n    //state variable for page number for episode wise;\r\n  const [currentPage2, setCurrentPage2] = useState(1);\r\n  //total number of elements per page\r\n  const [elementsPerPage] = useState(8);\r\n\r\n\r\n\r\n/* ---Constrains for Pagination Character wise.---\r\n   Here the indexes of the characters are calculated based on how many characters need to be shown per page.\r\n\r\n   Eg: 6 characters should be shown per page and we are in page no 1 \r\n         indexOfLastCharacter=>  currentPage * elementsPerPage => 1 * 6 = 6\r\n         indexOfFirstCharacter=> indexOfLastCharacter - elementsPerPage => 6 - 6 = 0\r\n         Since the index starts from 0. The number of characters that will render is from 0 to 6 which is 7 characters.\r\n\r\n  */\r\n  const indexOfLastCharacter = currentPage * elementsPerPage;\r\n  const indexOfFirstCharacter= indexOfLastCharacter - elementsPerPage;\r\n\r\n  //here we slice the data of the Characters state variable which was passed to the Grid component as a prop \r\n  //the slice is based on the index of the first character value and the index of the last character value calculated above.\r\n  const currentCharacters = characters.slice(indexOfFirstCharacter, indexOfLastCharacter);\r\n\r\n\r\n\r\n\r\n// Constrains for Pagination Episodic wise\r\n  const indexOfLastEpisode = currentPage2 * 4;\r\n  const indexOfFirstEpisode= indexOfLastEpisode - 4;\r\n  const currentEpisodes= episodes.slice(indexOfFirstEpisode, indexOfLastEpisode);\r\n\r\n\r\n\r\n//  Change page\r\n//  paginate and paginate2 are functions which sets the page numbers of character wise data and episode wise data. \r\n\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n   const paginate2 = pageNumber => setCurrentPage2(pageNumber);\r\n\r\n    //the state variable filter is checked\r\n    // the value 1 means Character wise component should be rendered\r\n    // else the Episode wise component should be rendered\r\n    if(filter==='1')\r\n              return ( \r\n                <div>\r\n                   <Pagination \r\n                          elementsPerPage={elementsPerPage}\r\n                          totalElements={characters.length}\r\n                          paginate={paginate}/>\r\n                 <CharacterGrid dataset={currentCharacters} filter={filter}/>\r\n                 \r\n                 </div>\r\n                      )\r\n    else {    \r\n        return (\r\n              <div>\r\n                 <Pagination2 \r\n                          elementsPerPage={elementsPerPage}\r\n                          totalElements={episodes.length}\r\n                          paginate={paginate2}\r\n                          />\r\n                <EpisodeGrid  dataset={currentEpisodes} filter={filter}/>\r\n               \r\n               </div>\r\n        )\r\n    }\r\n}\r\n","/*importing Hooks as need state variables for passing data \nAnd life cycle methods for fetching data from the API as soon as component renders */\nimport {useState,useEffect} from 'react';\n\nimport {useAuth} from '../contexts/AuthContext'\nimport {useHistory} from 'react-router-dom'\n\n//Grid component will have the contents of both character wise and episode wise respectively\nimport {Grid} from  '../grid/Grid' \n\n//importing css file for styles\nimport './homepage.css';\n\nexport const Homepage=()=> {\n \n  //State Variable Declarations\n  /*\n  filterEpisode stores all the Episode returned from the API\n  filterCharacter stores all the Character data returned from the API\n  filter will store a 0 or 1 value where we use it to basically check if the user opted for viewing Character wise or Episode wise.\n  */\n  const [filterEpisode,funcEpisode]=useState([])  \n  const [filterCharacter,funCharacter]=useState([])\n  const  [filter,funFilter]=useState('1')\n\n\n  const [error,setError]=useState('')\n  const {currentUser,logout}=useAuth()\n  const history=useHistory()\n\n  //setting email in localstorage\n   localStorage.setItem('email',currentUser.email)\n\n\n  \n   const handleLogout= async()=>{\n        setError('')\n        try{\n            await logout()\n             localStorage.removeItem('email')\n            history.push('/login')\n        }\n         catch(e){\n             setError(e.message)\n         }\n    }\n  \n  //Hook Declartation\n  //The hook below is called only for the first time the component is rendered\n  useEffect(()=>\n   { \n    //characters and episode data from the API are being fetched and stored to their respective state variables\n    fetch(`https://www.breakingbadapi.com/api/episodes/`).then(response=>response.json()).then(data=>funcEpisode(data))\n    fetch(`https://www.breakingbadapi.com/api/characters/`).then(response=>response.json()).then(data=>{funCharacter(data)\n     })\n\n  },[]   \n  )\n \n\n  return ( \n    <div className=\"container\">\n      <div className='filterBoxes'>\n        <h1 className='headerText'>Breaking Bad API</h1>\n\n        <div class='controls'>   \n            {/* Using a select tag to switch between Characters View and Episodes View */}\n            {/* An onchange method is given where the current selected value is passed to the filter state variable. */}\n            {/* The filter state variable is created and utilised so as to make the dom update on the changes when we switch from characters view to episodes view and vice versa */}\n            <select onChange={(e)=>funFilter(e.target.value)} value={filter}><option value='1'>Characters</option><option value='2'>Episodes</option></select>\n             <h5 style={{color:'white'}}>Welcome, {currentUser.email}</h5>\n            <button class='btnLogout' onClick={handleLogout}>Log Out</button>\n        </div>\n      </div>\n      {/* In the Grid component we pass the characters and episodes state variables which was retrieved from the Breaking Bad API. */}\n         {/* The filter state variable value is also passed so that the DOM gets the trigger that the component needs to be re-rendered*/}\n      <Grid  characters={filterCharacter}   episodes={filterEpisode}   filter={filter}  />\n\n    </div>\n  );\n}\n\n//exporting the component\n// export default Dashboard;\n","import React,{useRef,useState} from 'react'\r\nimport {Card,Button,Form,Alert} from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport {Link,useHistory} from 'react-router-dom'\r\n\r\nimport './signup.css'\r\n// import \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nexport const Signup = () => {\r\n  \r\n    const emailRef=useRef()\r\n    const passwordRef=useRef()\r\n    const passwordConfirmRef=useRef()\r\n    const [error,setError]=useState('')\r\n    const [loading,setLoading]=useState(false)\r\n    const history=useHistory()\r\n\r\n    //useAuth is a function which returns the context variable AuthContext and also returns the prop -> value which was passed to it in the AuthContext.Provider component \r\n    //destructuring the prop-> value and getting only signup function\r\n    const {signup}= useAuth();\r\n\r\n\r\n     const handleSubmit= async(e)=>{\r\n        e.preventDefault()\r\n\r\n        if(passwordRef.current.value!==passwordConfirmRef.current.value)\r\n        {return setError('Passwords Do not Match')}\r\n\r\n\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            //the function takes the username and password entered by the user which are stored in the two declares userRef variables.\r\n            await signup(emailRef.current.value,passwordRef.current.value)\r\n            console.log(history)\r\n             history.push('/')\r\n            }\r\n        catch (e){\r\n            setError(e.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n          \r\n             <h1 class='headerText'>Breaking Bad API</h1>\r\n                <div class='card-signup'>\r\n               <Card.Body>\r\n                   <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                   {error && <Alert variant='danger'>{error}</Alert>}\r\n                   <Form onSubmit={handleSubmit} >\r\n                       <Form.Group id=\"email\">\r\n                           <Form.Label>Email</Form.Label>\r\n                           <Form.Control type='email' placeholder='Enter Email' ref={emailRef} required/>\r\n                       </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                           <Form.Label>Password</Form.Label>\r\n                           <Form.Control type='password' placeholder='Enter Password' ref={passwordRef} required/>\r\n                       </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                           <Form.Label>Confirm Password</Form.Label>\r\n                           <Form.Control type='password' placeholder='Confirm Password' ref={passwordConfirmRef} required/>\r\n                       </Form.Group>\r\n                       <Button disabled={loading} type='submit' className=\"w-100\">Sign Up</Button>\r\n                   </Form>\r\n                   \r\n                     <div className=\"w-100 text-center mt-2\">\r\n                        Already Have An Account?<Link to='/login'>Log In</Link> \r\n                     </div>\r\n               </Card.Body>\r\n            </div> \r\n            \r\n         \r\n          \r\n        </>\r\n    )\r\n}\r\n","import React,{useRef,useState} from 'react'\r\nimport {Card,Button,Form,Alert} from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport {Link,useHistory} from 'react-router-dom'\r\n\r\nimport './login.css'\r\n\r\n// import \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nexport const Login = () => {\r\n    console.log(window.location.pathname)\r\n    const emailRef=useRef()\r\n    const passwordRef=useRef()\r\n    const [error,setError]=useState('')\r\n    const [loading,setLoading]=useState(false)\r\n    const history=useHistory()\r\n\r\n    //useAuth is a function which returns the context variable AuthContext and also returns the prop -> value which was passed to it in the AuthContext.Provider component \r\n    //destructuring the prop-> value and getting only signup function\r\n    //first time currentUser state variable is empty\r\n    const {login}= useAuth();\r\n\r\n\r\n     const handleSubmit= async(e)=>{\r\n        e.preventDefault()\r\n\r\n\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            //the function takes the username and password entered by the user which are stored in the two declares userRef variables.\r\n            await login(emailRef.current.value,passwordRef.current.value)\r\n\r\n             history.push('/')\r\n            }\r\n        catch (e){\r\n            setError(e.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n               <h1 class='headerText'>Breaking Bad API</h1>\r\n               <div class='card'>\r\n               <Card.Body>\r\n                   <h2 className=\"text-center mb-4\">Log In</h2>\r\n                   {error && <Alert variant='danger'>{error}</Alert>}\r\n                   <Form onSubmit={handleSubmit} >\r\n                       <Form.Group id=\"email\">\r\n                           <Form.Label>Email</Form.Label>\r\n                           <Form.Control type='email' placeholder='Enter Email' ref={emailRef} required/>\r\n                       </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                           <Form.Label>Password</Form.Label>\r\n                           <Form.Control type='password' placeholder='Enter Password' ref={passwordRef} required/>\r\n                       </Form.Group>\r\n                       <Button disabled={loading} type='submit' className=\"w-100\">Log In</Button>\r\n                   </Form>\r\n                    <div className=\"w-100 text-center mt-3 \" style={{color:'white'}}>\r\n                        <Link to='/forgotpassword'>Forgot Password ?</Link>\r\n                       </div> \r\n                   <div className=\"w-100 text-center mt-2\">\r\n              Need An Account? <Link to='/signup'>Sign Up</Link>\r\n                  </div> \r\n                    </Card.Body>            \r\n               </div>\r\n           \r\n            \r\n        </>\r\n    )\r\n}\r\n","import React,{useRef,useState} from 'react'\r\nimport {Card,Button,Form,Alert} from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const Forgotpassword = () => {\r\n    const emailRef=useRef('')\r\n    const [error,setError]=useState('')\r\n    const [message,setMessage]=useState('')\r\n    const [loading,setLoading]=useState(false)\r\n    const {forgotPassword}=useAuth();\r\n    \r\n   \r\n    const handleSubmit= async(e)=>{\r\n        e.preventDefault()\r\n        try{\r\n            setError('')\r\n            setMessage('')\r\n            setLoading(true)\r\n          await forgotPassword(emailRef.current.value)\r\n            //the function takes the username and password entered by the user which are stored in the two declares userRef variables.\r\n            setMessage(\"A Recovery Email has been Sent\")\r\n            }\r\n        catch (e){\r\n            setError(e.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <>\r\n                 <h1 class='headerText'>Breaking Bad API</h1>\r\n               <div class='card'>\r\n               <Card.Body>\r\n                   <h2 className=\"text-center mb-4\">Forgot Password</h2>\r\n                   {error && <Alert variant='danger'>{error}</Alert>}\r\n                   {message && <Alert variant='warning'>{message}</Alert>}\r\n                   <Form onSubmit={handleSubmit} >\r\n                       <Form.Group id=\"email\">\r\n                           <Form.Label>Email</Form.Label>\r\n                           <Form.Control type='email' placeholder='Enter Recovery Email' ref={emailRef} required/>\r\n                       </Form.Group>\r\n                       <Button disabled={loading} type='submit' className=\"w-100\">Reset Password</Button>\r\n\r\n                   </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n            <Link to='/login'>Sign In</Link>\r\n           </div> \r\n               </Card.Body>\r\n           </div>\r\n           \r\n            \r\n           \r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"./contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}\r\n","// import './App.css';\n import {Homepage} from './components/homepage/homepage'\nimport {Signup} from './components/signup/Signup'\nimport {Login} from './components/login/Login'\nimport {Forgotpassword} from './components/forgotpassword/Forgotpassword'\nimport PrivateRoute from './components/PrivateRoute'\n// import { Container } from 'react-bootstrap'\nimport {AuthProvider} from './components/contexts/AuthContext'\nimport {BrowserRouter as Router,Switch,Route,HashRouter} from 'react-router-dom'\n\nfunction App() {\n  const relative_path=window.location.pathname\n  console.log(relative_path)\n  return (\n    //here the AuthProvider encloses the entire components inside which  can be accessed/passed from the childrens attribute. Checking the AuthContext file gives better understanding\n           <Router> \n              <AuthProvider>\n              <HashRouter>   \n             <Switch>\n                 <PrivateRoute  exact path='/' component={Homepage}/>            \n                 {/* <Container className='d-flex align-items-center justify-content-center' style={{minHeight:'100vh'}}> */}\n                      <Route path={\"/signup\"} component={Signup}/>\n                      <Route path={\"/login\"} component={Login}/>\n                      <Route path=\"/forgotPassword\" component={Forgotpassword}/>   \n                 {/* </Container> */}\n                  \n             </Switch>\n             </HashRouter>\n              </AuthProvider>\n           \n           </Router>\n        \n         \n     \n \n \n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}